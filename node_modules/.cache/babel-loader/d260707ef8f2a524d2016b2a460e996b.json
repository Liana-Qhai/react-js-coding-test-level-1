{"ast":null,"code":"// /* eslint-disable react-hooks/exhaustive-deps */\n// // import \"./App.css\";\n// // import { useState, useEffect } from \"react\";\n// // import ReactLoading from \"react-loading\";\n// // import axios from \"axios\";\n// // import Modal from \"react-modal\";\n// // import BarChart from \"react-easy-bar-chart\";\n// // import * as htmlToImage from \"html-to-image\";\n// // import { jsPDF } from \"jspdf\";\n// // // import { PDFViewer } from '@react-pdf/renderer';\n// // // import FeeAcceptance from '../Pdfgenerator/FeeAcceptance'\n\n// function PokeDex() {\n//   const [pokemons, setPokemons] = useState([]);\n//   const [pokemonDetail, setPokemonDetail] = useState(null);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [search, setSearch] = useState(\"\");\n//   const [sort, setSort] = useState({ order: 'asc', orderBy: 'id' })\n//   const [api, setApi] = useState (\"https://pokeapi.co/api/v2/pokemon\");\n//   const [prevApi, setPrevApi] = useState(\"\");\n//   const [nextApi, setNextApi] = useState(\"\");\n\n//   const customStyles = {\n//     content: {\n//       top: \"50%\",\n//       left: \"50%\",\n//       right: \"auto\",\n//       bottom: \"auto\",\n//       marginRight: \"-50%\",\n//       transform: \"translate(-50%, -50%)\",\n//       background: \"black\",\n//             color: \"white\",\n//     },\n//     overlay: { backgroundColor: \"grey\" },\n//   };\n\n//   useEffect(() => {\n//     setIsLoading(true);\n//     fetchPokeDex();\n\n//   }, [api]);\n\n//   function fetchPokeDex() {\n//     axios\n//       .get(api)\n//       .then((res) => {\n//         const { results, next, previous } = res.data;\n//         setPokemons(results);\n//         // setPokemonsFiltered(results);\n//         setPrevApi(previous);\n//         setNextApi(next);\n//         setIsLoading(false);\n//       })\n//       .catch((err) => {\n//         setIsLoading(false);\n//       });\n//   }\n\n//   function openModal(val) {\n//     axios\n//       .get(val.url)\n//       .then((res) => {\n//         console.log({ res });\n//         setPokemonDetail(res.data);\n//       })\n//       .catch((err) => {\n//         console.log(err);\n//       });\n//   }\n\n//   function searchPokemon(e) {\n//     setSearch(e);\n//   }\n\n//   function resolveDataToBarChart(datas) {\n//     return datas.map((e) => ({\n//       title: e.stat.name,\n//       value: e.base_stat,\n//       color: \"blue\",\n//     }));\n//   }\n\n//   useEffect(() => {\n//     let result = pokemons;\n//     console.log({ search });\n//     if (!!search) {\n//       axios\n//         .get(\"https://pokeapi.co/api/v2/pokemon\")\n//         .then((res) => {\n//           const { results, next, previous } = res.data;\n//           if (!next && !previous) {\n//             result = results.filter((pokemon) => {\n//               return pokemon.name.includes(search);\n//             });\n//             // setPokemonsFiltered(result);\n//           }\n//         });\n//     } else if (!search) {\n//       console.log(\"go here\");\n//       setIsLoading(true);\n//       fetchPokeDex();\n//     }\n//   }, [search]);\n\n//   const handleEmptyField = (event) => {\n//     if (!event.target.value) setSearch(\"\");\n//   };\n\n//   async function printDocument() {\n//     const input = document.getElementById(\"divToPrint\");\n//     const dataUrl = await htmlToImage.toPng(input);\n//     const pdf = new jsPDF();\n//     pdf.setFillColor(204,204,204,0);\n//     pdf.rect(0,0,200,200, 'F');\n//     pdf.addImage(dataUrl, \"png\", 0, 0);\n//     pdf.save(\"PokeMonDetail.pdf\");\n//   }\n\n//   function sortPokemons() {\n//     let results = [];\n//     // if ([\"\", \"DESC\"].includes(sort)) {\n//     //   results = [...pokemonsFiltered].sort((a, b) =>\n//     //     a.name > b.name ? 1 : -1\n//     //   );\n//     //   setSort(\"ASC\");\n//     // } else {\n//     //   results = [...pokemonsFiltered].sort((a, b) =>\n//     //     a.name < b.name ? 1 : -1\n//     //   );\n//     //   setSort(\"DESC\");\n//     // }\n//     // setPokemonsFiltered(results);\n//   }\n\n//   function prev() {\n//     setApi(prevApi);\n//   }\n\n//   function next() {\n//     setApi(nextApi);\n//   }\n\n//   if (!isLoading && pokemons.length === 0) {\n//     return (\n//       <div>\n//         <header className=\"App-header\">\n//           <h1>Welcome to pokedex !</h1>\n//           <h2>Requirement:</h2>\n//           <ul>\n//             <li>\n//               Call this api:https://pokeapi.co/api/v2/pokemon to get pokedex, and show a list of pokemon name.\n//             </li>\n//             <li>Implement React Loading and show it during API call</li>\n//             <li>when hover on the list item , change the item color to yellow.</li>\n//             <li>when clicked the list item, show the modal below</li>\n//             <li>\n//               Add a search bar on top of the bar for searching, search will run\n//               on keyup event\n//             </li>\n//             <li>Implement sorting and pagination</li>\n//             <li>Commit your codes after done</li>\n//             <li>If you do more than expected (E.g redesign the page / create a chat feature at the bottom right). it would be good.</li>\n//           </ul>\n//         </header>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div>\n//       <header className=\"App-header\">\n//         {isLoading ? (\n//           <>\n//             <div className=\"App\">\n//               <header className=\"App-header\">\n//                 <ReactLoading \n//                   type={\"spin\"}\n//                   color=\"#fff\"\n//                 />\n//               </header>\n//             </div>\n//           </>\n//         ) : (\n//           <>\n//             <h1>Welcome to pokedex !</h1>\n//             <input \n//               type=\"search\"\n//               name=\"search\" \n//               defaultValues=\"\"\n//               onKeyUp ={(e) => setPokemons(e.target.value)}\n//               onChange={handleEmptyField}\n//             />\n//             <button onClick={() => sort()}>Sort</button>\n//           </>\n//         )}\n//       </header>\n//       {pokemonDetail && (\n//         <Modal\n//           isOpen={pokemonDetail}\n//           contentLabel={pokemonDetail?.name || \"\"}\n//           onRequestClose={() => {\n//             setPokemonDetail(null);\n//           }}\n//           style={customStyles}\n//         >\n//           {/* <div>\n//             Requirement:\n//             <ul>\n//               <li>show the sprites front_default as the pokemon image</li>\n//               <li>\n//                 Show the stats details - only stat.name and base_stat is\n//                 required in tabular format\n//               </li>\n//               <li>Create a bar chart based on the stats above</li>\n//               <li>Create a  buttton to download the information generated in this modal as pdf. (images and chart must be included)</li>\n//             </ul>\n//           </div> */}\n\n//           <div>\n//             <img\n//               src={pokemonDetail.sprites.front_default}\n//               alt=\"sprites front_default\"\n//             ></img>\n//             <br/>\n//             <span> Stat Details</span>\n//             <ul>\n//               {pokemonDetail && pokemonDetail.stats && pokemonDetail.stats.map((e, idx) => (\n//                 <li key={idx}> \n//                 Stat Name : {e.stat.name}\n//                 <br></br>\n//                 Base Name : {e.base_stat}\n//                 </li>\n//               ))}\n//             </ul>\n//             <BarChart\n//               xAxis=\"stats\"\n//               yAxis=\"values\"\n//               height={400}\n//               width={800}\n//               data={resolveDataToBarChart(pokemonDetail.stats)}\n//             />\n//           </div>\n//           <button onClick={() => printDocument()} style={{ cursor: \"pointer\" }}>\n//             Download as PDF\n//           </button>\n//         </Modal>\n//       )}\n//     </div>\n//   );\n// }\n\nexport default PokeDex;","map":{"version":3,"names":["PokeDex"],"sources":["D:/user/Documents/GitHub/react-js-coding-test-level-1/src/PokeDex.js"],"sourcesContent":["// /* eslint-disable react-hooks/exhaustive-deps */\r\n// // import \"./App.css\";\r\n// // import { useState, useEffect } from \"react\";\r\n// // import ReactLoading from \"react-loading\";\r\n// // import axios from \"axios\";\r\n// // import Modal from \"react-modal\";\r\n// // import BarChart from \"react-easy-bar-chart\";\r\n// // import * as htmlToImage from \"html-to-image\";\r\n// // import { jsPDF } from \"jspdf\";\r\n// // // import { PDFViewer } from '@react-pdf/renderer';\r\n// // // import FeeAcceptance from '../Pdfgenerator/FeeAcceptance'\r\n\r\n\r\n// function PokeDex() {\r\n//   const [pokemons, setPokemons] = useState([]);\r\n//   const [pokemonDetail, setPokemonDetail] = useState(null);\r\n//   const [isLoading, setIsLoading] = useState(false);\r\n//   const [search, setSearch] = useState(\"\");\r\n//   const [sort, setSort] = useState({ order: 'asc', orderBy: 'id' })\r\n//   const [api, setApi] = useState (\"https://pokeapi.co/api/v2/pokemon\");\r\n//   const [prevApi, setPrevApi] = useState(\"\");\r\n//   const [nextApi, setNextApi] = useState(\"\");\r\n\r\n//   const customStyles = {\r\n//     content: {\r\n//       top: \"50%\",\r\n//       left: \"50%\",\r\n//       right: \"auto\",\r\n//       bottom: \"auto\",\r\n//       marginRight: \"-50%\",\r\n//       transform: \"translate(-50%, -50%)\",\r\n//       background: \"black\",\r\n//             color: \"white\",\r\n//     },\r\n//     overlay: { backgroundColor: \"grey\" },\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     setIsLoading(true);\r\n//     fetchPokeDex();\r\n\r\n//   }, [api]);\r\n\r\n\r\n//   function fetchPokeDex() {\r\n//     axios\r\n//       .get(api)\r\n//       .then((res) => {\r\n//         const { results, next, previous } = res.data;\r\n//         setPokemons(results);\r\n//         // setPokemonsFiltered(results);\r\n//         setPrevApi(previous);\r\n//         setNextApi(next);\r\n//         setIsLoading(false);\r\n//       })\r\n//       .catch((err) => {\r\n//         setIsLoading(false);\r\n//       });\r\n//   }\r\n\r\n//   function openModal(val) {\r\n//     axios\r\n//       .get(val.url)\r\n//       .then((res) => {\r\n//         console.log({ res });\r\n//         setPokemonDetail(res.data);\r\n//       })\r\n//       .catch((err) => {\r\n//         console.log(err);\r\n//       });\r\n//   }\r\n\r\n//   function searchPokemon(e) {\r\n//     setSearch(e);\r\n//   }\r\n\r\n//   function resolveDataToBarChart(datas) {\r\n//     return datas.map((e) => ({\r\n//       title: e.stat.name,\r\n//       value: e.base_stat,\r\n//       color: \"blue\",\r\n//     }));\r\n//   }\r\n  \r\n//   useEffect(() => {\r\n//     let result = pokemons;\r\n//     console.log({ search });\r\n//     if (!!search) {\r\n//       axios\r\n//         .get(\"https://pokeapi.co/api/v2/pokemon\")\r\n//         .then((res) => {\r\n//           const { results, next, previous } = res.data;\r\n//           if (!next && !previous) {\r\n//             result = results.filter((pokemon) => {\r\n//               return pokemon.name.includes(search);\r\n//             });\r\n//             // setPokemonsFiltered(result);\r\n//           }\r\n//         });\r\n//     } else if (!search) {\r\n//       console.log(\"go here\");\r\n//       setIsLoading(true);\r\n//       fetchPokeDex();\r\n//     }\r\n//   }, [search]);\r\n\r\n//   const handleEmptyField = (event) => {\r\n//     if (!event.target.value) setSearch(\"\");\r\n//   };\r\n\r\n\r\n//   async function printDocument() {\r\n//     const input = document.getElementById(\"divToPrint\");\r\n//     const dataUrl = await htmlToImage.toPng(input);\r\n//     const pdf = new jsPDF();\r\n//     pdf.setFillColor(204,204,204,0);\r\n//     pdf.rect(0,0,200,200, 'F');\r\n//     pdf.addImage(dataUrl, \"png\", 0, 0);\r\n//     pdf.save(\"PokeMonDetail.pdf\");\r\n//   }\r\n\r\n//   function sortPokemons() {\r\n//     let results = [];\r\n//     // if ([\"\", \"DESC\"].includes(sort)) {\r\n//     //   results = [...pokemonsFiltered].sort((a, b) =>\r\n//     //     a.name > b.name ? 1 : -1\r\n//     //   );\r\n//     //   setSort(\"ASC\");\r\n//     // } else {\r\n//     //   results = [...pokemonsFiltered].sort((a, b) =>\r\n//     //     a.name < b.name ? 1 : -1\r\n//     //   );\r\n//     //   setSort(\"DESC\");\r\n//     // }\r\n//     // setPokemonsFiltered(results);\r\n//   }\r\n\r\n//   function prev() {\r\n//     setApi(prevApi);\r\n//   }\r\n\r\n//   function next() {\r\n//     setApi(nextApi);\r\n//   }\r\n\r\n//   if (!isLoading && pokemons.length === 0) {\r\n//     return (\r\n//       <div>\r\n//         <header className=\"App-header\">\r\n//           <h1>Welcome to pokedex !</h1>\r\n//           <h2>Requirement:</h2>\r\n//           <ul>\r\n//             <li>\r\n//               Call this api:https://pokeapi.co/api/v2/pokemon to get pokedex, and show a list of pokemon name.\r\n//             </li>\r\n//             <li>Implement React Loading and show it during API call</li>\r\n//             <li>when hover on the list item , change the item color to yellow.</li>\r\n//             <li>when clicked the list item, show the modal below</li>\r\n//             <li>\r\n//               Add a search bar on top of the bar for searching, search will run\r\n//               on keyup event\r\n//             </li>\r\n//             <li>Implement sorting and pagination</li>\r\n//             <li>Commit your codes after done</li>\r\n//             <li>If you do more than expected (E.g redesign the page / create a chat feature at the bottom right). it would be good.</li>\r\n//           </ul>\r\n//         </header>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//       <header className=\"App-header\">\r\n//         {isLoading ? (\r\n//           <>\r\n//             <div className=\"App\">\r\n//               <header className=\"App-header\">\r\n//                 <ReactLoading \r\n//                   type={\"spin\"}\r\n//                   color=\"#fff\"\r\n//                 />\r\n//               </header>\r\n//             </div>\r\n//           </>\r\n//         ) : (\r\n//           <>\r\n//             <h1>Welcome to pokedex !</h1>\r\n//             <input \r\n//               type=\"search\"\r\n//               name=\"search\" \r\n//               defaultValues=\"\"\r\n//               onKeyUp ={(e) => setPokemons(e.target.value)}\r\n//               onChange={handleEmptyField}\r\n//             />\r\n//             <button onClick={() => sort()}>Sort</button>\r\n//           </>\r\n//         )}\r\n//       </header>\r\n//       {pokemonDetail && (\r\n//         <Modal\r\n//           isOpen={pokemonDetail}\r\n//           contentLabel={pokemonDetail?.name || \"\"}\r\n//           onRequestClose={() => {\r\n//             setPokemonDetail(null);\r\n//           }}\r\n//           style={customStyles}\r\n//         >\r\n//           {/* <div>\r\n//             Requirement:\r\n//             <ul>\r\n//               <li>show the sprites front_default as the pokemon image</li>\r\n//               <li>\r\n//                 Show the stats details - only stat.name and base_stat is\r\n//                 required in tabular format\r\n//               </li>\r\n//               <li>Create a bar chart based on the stats above</li>\r\n//               <li>Create a  buttton to download the information generated in this modal as pdf. (images and chart must be included)</li>\r\n//             </ul>\r\n//           </div> */}\r\n\r\n//           <div>\r\n//             <img\r\n//               src={pokemonDetail.sprites.front_default}\r\n//               alt=\"sprites front_default\"\r\n//             ></img>\r\n//             <br/>\r\n//             <span> Stat Details</span>\r\n//             <ul>\r\n//               {pokemonDetail && pokemonDetail.stats && pokemonDetail.stats.map((e, idx) => (\r\n//                 <li key={idx}> \r\n//                 Stat Name : {e.stat.name}\r\n//                 <br></br>\r\n//                 Base Name : {e.base_stat}\r\n//                 </li>\r\n//               ))}\r\n//             </ul>\r\n//             <BarChart\r\n//               xAxis=\"stats\"\r\n//               yAxis=\"values\"\r\n//               height={400}\r\n//               width={800}\r\n//               data={resolveDataToBarChart(pokemonDetail.stats)}\r\n//             />\r\n//           </div>\r\n//           <button onClick={() => printDocument()} style={{ cursor: \"pointer\" }}>\r\n//             Download as PDF\r\n//           </button>\r\n//         </Modal>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\nexport default PokeDex;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,eAAeA,OAAO"},"metadata":{},"sourceType":"module"}