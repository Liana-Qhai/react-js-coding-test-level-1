{"ast":null,"code":"import { clonePseudoElements } from './clone-pseudos';\nimport { createImage, toArray } from './util';\nimport { getMimeType } from './mimes';\nimport { resourceToDataURL } from './dataurl';\nasync function cloneCanvasElement(canvas) {\n  const dataURL = canvas.toDataURL();\n  if (dataURL === 'data:,') {\n    return canvas.cloneNode(false);\n  }\n  return createImage(dataURL);\n}\nasync function cloneVideoElement(video, options) {\n  if (video.currentSrc) {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    canvas.width = video.clientWidth;\n    canvas.height = video.clientHeight;\n    ctx === null || ctx === void 0 ? void 0 : ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n    const dataURL = canvas.toDataURL();\n    return createImage(dataURL);\n  }\n  const poster = video.poster;\n  const contentType = getMimeType(poster);\n  const dataURL = await resourceToDataURL(poster, contentType, options);\n  return createImage(dataURL);\n}\nasync function cloneIFrameElement(iframe) {\n  var _a;\n  try {\n    if ((_a = iframe === null || iframe === void 0 ? void 0 : iframe.contentDocument) === null || _a === void 0 ? void 0 : _a.body) {\n      return await cloneNode(iframe.contentDocument.body, {}, true);\n    }\n  } catch (_b) {\n    // Failed to clone iframe\n  }\n  return iframe.cloneNode(false);\n}\nasync function cloneSingleNode(node, options) {\n  if (node instanceof HTMLCanvasElement) {\n    return cloneCanvasElement(node);\n  }\n  if (node instanceof HTMLVideoElement) {\n    return cloneVideoElement(node, options);\n  }\n  if (node instanceof HTMLIFrameElement) {\n    return cloneIFrameElement(node);\n  }\n  return node.cloneNode(false);\n}\nconst isSlotElement = node => node.tagName != null && node.tagName.toUpperCase() === 'SLOT';\nasync function cloneChildren(nativeNode, clonedNode, options) {\n  var _a;\n  const children = isSlotElement(nativeNode) && nativeNode.assignedNodes ? toArray(nativeNode.assignedNodes()) : toArray(((_a = nativeNode.shadowRoot) !== null && _a !== void 0 ? _a : nativeNode).childNodes);\n  if (children.length === 0 || nativeNode instanceof HTMLVideoElement) {\n    return clonedNode;\n  }\n  await children.reduce((deferred, child) => deferred.then(() => cloneNode(child, options)).then(clonedChild => {\n    if (clonedChild) {\n      clonedNode.appendChild(clonedChild);\n    }\n  }), Promise.resolve());\n  return clonedNode;\n}\nfunction cloneCSSStyle(nativeNode, clonedNode) {\n  const targetStyle = clonedNode.style;\n  if (!targetStyle) {\n    return;\n  }\n  const sourceStyle = window.getComputedStyle(nativeNode);\n  if (sourceStyle.cssText) {\n    targetStyle.cssText = sourceStyle.cssText;\n    targetStyle.transformOrigin = sourceStyle.transformOrigin;\n  } else {\n    toArray(sourceStyle).forEach(name => {\n      let value = sourceStyle.getPropertyValue(name);\n      if (name === 'font-size' && value.endsWith('px')) {\n        const reducedFont = Math.floor(parseFloat(value.substring(0, value.length - 2))) - 0.1;\n        value = `${reducedFont}px`;\n      }\n      targetStyle.setProperty(name, value, sourceStyle.getPropertyPriority(name));\n    });\n  }\n}\nfunction cloneInputValue(nativeNode, clonedNode) {\n  if (nativeNode instanceof HTMLTextAreaElement) {\n    clonedNode.innerHTML = nativeNode.value;\n  }\n  if (nativeNode instanceof HTMLInputElement) {\n    clonedNode.setAttribute('value', nativeNode.value);\n  }\n}\nfunction cloneSelectValue(nativeNode, clonedNode) {\n  if (nativeNode instanceof HTMLSelectElement) {\n    const clonedSelect = clonedNode;\n    const selectedOption = Array.from(clonedSelect.children).find(child => nativeNode.value === child.getAttribute('value'));\n    if (selectedOption) {\n      selectedOption.setAttribute('selected', '');\n    }\n  }\n}\nfunction decorate(nativeNode, clonedNode) {\n  if (clonedNode instanceof Element) {\n    cloneCSSStyle(nativeNode, clonedNode);\n    clonePseudoElements(nativeNode, clonedNode);\n    cloneInputValue(nativeNode, clonedNode);\n    cloneSelectValue(nativeNode, clonedNode);\n  }\n  return clonedNode;\n}\nasync function ensureSVGSymbols(clone, options) {\n  const uses = clone.querySelectorAll ? clone.querySelectorAll('use') : [];\n  if (uses.length === 0) {\n    return clone;\n  }\n  const processedDefs = {};\n  for (let i = 0; i < uses.length; i++) {\n    const use = uses[i];\n    const id = use.getAttribute('xlink:href');\n    if (id) {\n      const exist = clone.querySelector(id);\n      const definition = document.querySelector(id);\n      if (!exist && definition && !processedDefs[id]) {\n        // eslint-disable-next-line no-await-in-loop\n        processedDefs[id] = await cloneNode(definition, options, true);\n      }\n    }\n  }\n  const nodes = Object.values(processedDefs);\n  if (nodes.length) {\n    const ns = 'http://www.w3.org/1999/xhtml';\n    const svg = document.createElementNS(ns, 'svg');\n    svg.setAttribute('xmlns', ns);\n    svg.style.position = 'absolute';\n    svg.style.width = '0';\n    svg.style.height = '0';\n    svg.style.overflow = 'hidden';\n    svg.style.display = 'none';\n    const defs = document.createElementNS(ns, 'defs');\n    svg.appendChild(defs);\n    for (let i = 0; i < nodes.length; i++) {\n      defs.appendChild(nodes[i]);\n    }\n    clone.appendChild(svg);\n  }\n  return clone;\n}\nexport async function cloneNode(node, options, isRoot) {\n  if (!isRoot && options.filter && !options.filter(node)) {\n    return null;\n  }\n  return Promise.resolve(node).then(clonedNode => cloneSingleNode(clonedNode, options)).then(clonedNode => cloneChildren(node, clonedNode, options)).then(clonedNode => decorate(node, clonedNode)).then(clonedNode => ensureSVGSymbols(clonedNode, options));\n}","map":{"version":3,"mappings":"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","names":["clonePseudoElements","createImage","toArray","getMimeType","resourceToDataURL","cloneCanvasElement","canvas","dataURL","toDataURL","cloneNode","cloneVideoElement","video","options","currentSrc","document","createElement","ctx","getContext","width","clientWidth","height","clientHeight","drawImage","poster","contentType","cloneIFrameElement","iframe","contentDocument","body","cloneSingleNode","node","HTMLCanvasElement","HTMLVideoElement","HTMLIFrameElement","isSlotElement","tagName","toUpperCase","cloneChildren","nativeNode","clonedNode","children","assignedNodes","shadowRoot","childNodes","length","reduce","deferred","child","then","clonedChild","appendChild","Promise","resolve","cloneCSSStyle","targetStyle","style","sourceStyle","window","getComputedStyle","cssText","transformOrigin","forEach","name","value","getPropertyValue","endsWith","reducedFont","Math","floor","parseFloat","substring","setProperty","getPropertyPriority","cloneInputValue","HTMLTextAreaElement","innerHTML","HTMLInputElement","setAttribute","cloneSelectValue","HTMLSelectElement","clonedSelect","selectedOption","Array","from","find","getAttribute","decorate","Element","ensureSVGSymbols","clone","uses","querySelectorAll","processedDefs","i","use","id","exist","querySelector","definition","nodes","Object","values","ns","svg","createElementNS","position","overflow","display","defs","isRoot","filter"],"sourceRoot":"","sources":["../src/clone-node.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}